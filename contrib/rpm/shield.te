policy_module(shield, 1.100.1)

########################################
#
# Declarations
#

type shield_t;
type shield_exec_t;
init_daemon_domain(shield_t, shield_exec_t)

permissive shield_t;

type shield_initrc_exec_t;
init_script_file(shield_initrc_exec_t)

type shield_conf_t;
files_type(shield_conf_t)

type shield_var_lib_t;
files_type(shield_var_lib_t)

type shield_var_run_t;
files_type(shield_var_run_t)

type shield_port_t;
corenet_port(shield_port_t)

########################################
#
# shield local policy
#
allow shield_t self:process { fork };

allow shield_t self:fifo_file rw_fifo_file_perms;
allow shield_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(shield_t, shield_conf_t, shield_conf_t)
manage_files_pattern(shield_t, shield_conf_t, shield_conf_t)

manage_dirs_pattern(shield_t, shield_var_lib_t, shield_var_lib_t)
manage_files_pattern(shield_t, shield_var_lib_t, shield_var_lib_t)
files_var_lib_filetrans(shield_t, shield_var_lib_t, { dir file })

manage_dirs_pattern(shield_t, shield_var_run_t, shield_var_run_t)
manage_files_pattern(shield_t, shield_var_run_t, shield_var_run_t)

sysnet_dns_name_resolve(shield_t)
corenet_all_recvfrom_unlabeled(shield_t)

allow shield_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(shield_t)
corenet_tcp_sendrecv_generic_node(shield_t)
corenet_tcp_sendrecv_all_ports(shield_t)
corenet_tcp_bind_generic_node(shield_t)

gen_require(`
    type shield_port_t;
')
allow shield_t shield_port_t:tcp_socket name_bind;

gen_require(`
    type shield_port_t;
')
allow shield_t shield_port_t:tcp_socket name_connect;

domain_use_interactive_fds(shield_t)

files_read_etc_files(shield_t)

miscfiles_read_localization(shield_t)

sysnet_dns_name_resolve(shield_t)

allow shield_t shield_exec_t:file execute_no_trans;
allow shield_t self:process setsched;
corecmd_exec_ls(shield_t)
corenet_tcp_connect_http_port(shield_t)
dev_read_urand(shield_t)
fs_getattr_xattr_fs(shield_t)
kernel_read_system_state(shield_t)
